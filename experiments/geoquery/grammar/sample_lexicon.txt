"**start**","START{0}","**skip**"
"0","N_e{0}","0:i","0 0:i"
"abilene","N_e{0}","abilene_tx:c","0 abilene_tx:c"
"abingdon","N_e{0}","abingdon_pa:c","0 abingdon_pa:c"
"akron","N_e{0}","akron_oh:c","0 akron_oh:c"
"alabama","N_e{0}","alabama:s","0 alabama:s"
"alameda","N_e{0}","alameda_ca:c","0 alameda_ca:c"
"alaska","N_e{0}","alaska:s","0 alaska:s"
"albany","N_e{0}","albany_ga:c","0 albany_ga:c"
"albany","N_e{0}","albany_ny:c","0 albany_ny:c"
"albuquerque","N_e{0}","albuquerque_nm:c","0 albuquerque_nm:c"
"alexandria","N_e{0}","alexandria_va:c","0 alexandria_va:c"
"alhambra","N_e{0}","alhambra_ca:c","0 alhambra_ca:c"
"allegheny river","N_e{0}","allegheny_river:r","0 allegheny_river:r"
"allentown","N_e{0}","allentown_pa:c","0 allentown_pa:c"
"altoona","N_e{0}","altoona_pa:c","0 altoona_pa:c"
"amarillo","N_e{0}","amarillo_tx:c","0 amarillo_tx:c"
"anaheim","N_e{0}","anaheim_ca:c","0 anaheim_ca:c"
"anchorage","N_e{0}","anchorage_ak:c","0 anchorage_ak:c"
"anderson","N_e{0}","anderson_in:c","0 anderson_in:c"
"ann arbor","N_e{0}","ann_arbor_mi:c","0 ann_arbor_mi:c"
"appleton","N_e{0}","appleton_wi:c","0 appleton_wi:c"
"arizona","N_e{0}","arizona:s","0 arizona:s"
"arkansas","N_e{0}","arkansas:s","0 arkansas:s"
"arkansas river","N_e{0}","arkansas_river:r","0 arkansas_river:r"
"arlington heights","N_e{0}","arlington_heights_il:c","0 arlington_heights_il:c"
"arlington","N_e{0}","arlington_tx:c","0 arlington_tx:c"
"arlington","N_e{0}","arlington_va:c","0 arlington_va:c"
"arvada","N_e{0}","arvada_co:c","0 arvada_co:c"
"atlanta","N_e{0}","atlanta_ga:c","0 atlanta_ga:c"
"aurora","N_e{0}","aurora_co:c","0 aurora_co:c"
"aurora","N_e{0}","aurora_il:c","0 aurora_il:c"
"austin","N_e{0}","austin_tx:c","0 austin_tx:c"
"bakersfield","N_e{0}","bakersfield_ca:c","0 bakersfield_ca:c"
"baltimore","N_e{0}","baltimore_md:c","0 baltimore_md:c"
"baton rouge","N_e{0}","baton_rouge_la:c","0 baton_rouge_la:c"
"bayonne","N_e{0}","bayonne_nj:c","0 bayonne_nj:c"
"beaumont","N_e{0}","beaumont_tx:c","0 beaumont_tx:c"
"becharof","N_e{0}","becharof:l","0 becharof:l"
"bellevue","N_e{0}","bellevue_wa:c","0 bellevue_wa:c"
"berkeley","N_e{0}","berkeley_ca:c","0 berkeley_ca:c"
"bethesda","N_e{0}","bethesda_md:c","0 bethesda_md:c"
"bethlehem","N_e{0}","bethlehem_pa:c","0 bethlehem_pa:c"
"bighorn river","N_e{0}","bighorn_river:r","0 bighorn_river:r"
"billings","N_e{0}","billings_mt:c","0 billings_mt:c"
"birmingham","N_e{0}","birmingham_al:c","0 birmingham_al:c"
"bloomington","N_e{0}","bloomington_mn:c","0 bloomington_mn:c"
"boise","N_e{0}","boise_id:c","0 boise_id:c"
"boston","N_e{0}","boston_ma:c","0 boston_ma:c"
"boulder","N_e{0}","boulder_co:c","0 boulder_co:c"
"bridgeport","N_e{0}","bridgeport_ct:c","0 bridgeport_ct:c"
"bristol","N_e{0}","bristol_ct:c","0 bristol_ct:c"
"bristol township","N_e{0}","bristol_township_pa:c","0 bristol_township_pa:c"
"brockton","N_e{0}","brockton_ma:c","0 brockton_ma:c"
"brownsville","N_e{0}","brownsville_tx:c","0 brownsville_tx:c"
"buena park","N_e{0}","buena_park_ca:c","0 buena_park_ca:c"
"buffalo","N_e{0}","buffalo_ny:c","0 buffalo_ny:c"
"burbank","N_e{0}","burbank_ca:c","0 burbank_ca:c"
"california","N_e{0}","california:s","0 california:s"
"cambridge","N_e{0}","cambridge_ma:c","0 cambridge_ma:c"
"camden","N_e{0}","camden_nj:c","0 camden_nj:c"
"canadian river","N_e{0}","canadian_river:r","0 canadian_river:r"
"canton","N_e{0}","canton_oh:c","0 canton_oh:c"
"carson","N_e{0}","carson_ca:c","0 carson_ca:c"
"casper","N_e{0}","casper_wy:c","0 casper_wy:c"
"cedar rapids","N_e{0}","cedar_rapids_ia:c","0 cedar_rapids_ia:c"
"champaign","N_e{0}","champaign_il:c","0 champaign_il:c"
"champlain","N_e{0}","champlain:l","0 champlain:l"
"charleston","N_e{0}","charleston_sc:c","0 charleston_sc:c"
"charleston","N_e{0}","charleston_wv:c","0 charleston_wv:c"
"charlotte","N_e{0}","charlotte_nc:c","0 charlotte_nc:c"
"chattahoochee river","N_e{0}","chattahoochee_river:r","0 chattahoochee_river:r"
"chattanooga","N_e{0}","chattanooga_tn:c","0 chattanooga_tn:c"
"cheektowaga","N_e{0}","cheektowaga_ny:c","0 cheektowaga_ny:c"
"cherry hill","N_e{0}","cherry_hill_nj:c","0 cherry_hill_nj:c"
"chesapeake","N_e{0}","chesapeake_va:c","0 chesapeake_va:c"
"cheyenne river","N_e{0}","cheyenne_river:r","0 cheyenne_river:r"
"chicago","N_e{0}","chicago_il:c","0 chicago_il:c"
"chula vista","N_e{0}","chula_vista_ca:c","0 chula_vista_ca:c"
"cicero","N_e{0}","cicero_il:c","0 cicero_il:c"
"cimarron river","N_e{0}","cimarron_river:r","0 cimarron_river:r"
"cincinnati","N_e{0}","cincinnati_oh:c","0 cincinnati_oh:c"
"citrus heights","N_e{0}","citrus_heights_ca:c","0 citrus_heights_ca:c"
"clark fork river","N_e{0}","clark_fork_river:r","0 clark_fork_river:r"
"clearwater","N_e{0}","clearwater_fl:c","0 clearwater_fl:c"
"cleveland","N_e{0}","cleveland_oh:c","0 cleveland_oh:c"
"clifton","N_e{0}","clifton_nj:c","0 clifton_nj:c"
"clinton","N_e{0}","clinton_mi:c","0 clinton_mi:c"
"colorado","N_e{0}","colorado:s","0 colorado:s"
"colorado river","N_e{0}","colorado_river:r","0 colorado_river:r"
"colorado springs","N_e{0}","colorado_springs_co:c","0 colorado_springs_co:c"
"columbia","N_e{0}","columbia_mo:c","0 columbia_mo:c"
"columbia river","N_e{0}","columbia_river:r","0 columbia_river:r"
"columbia","N_e{0}","columbia_sc:c","0 columbia_sc:c"
"columbus","N_e{0}","columbus_ga:c","0 columbus_ga:c"
"columbus","N_e{0}","columbus_oh:c","0 columbus_oh:c"
"compton","N_e{0}","compton_ca:c","0 compton_ca:c"
"concord","N_e{0}","concord_ca:c","0 concord_ca:c"
"connecticut","N_e{0}","connecticut:s","0 connecticut:s"
"connecticut river","N_e{0}","connecticut_river:r","0 connecticut_river:r"
"corpus christi","N_e{0}","corpus_christi_tx:c","0 corpus_christi_tx:c"
"costa mesa","N_e{0}","costa_mesa_ca:c","0 costa_mesa_ca:c"
"cranston","N_e{0}","cranston_ri:c","0 cranston_ri:c"
"cumberland river","N_e{0}","cumberland_river:r","0 cumberland_river:r"
"dakota river","N_e{0}","dakota_river:r","0 dakota_river:r"
"dallas","N_e{0}","dallas_tx:c","0 dallas_tx:c"
"daly city","N_e{0}","daly_city_ca:c","0 daly_city_ca:c"
"danbury","N_e{0}","danbury_ct:c","0 danbury_ct:c"
"davenport","N_e{0}","davenport_ia:c","0 davenport_ia:c"
"dayton","N_e{0}","dayton_oh:c","0 dayton_oh:c"
"dearborn heights","N_e{0}","dearborn_heights_mi:c","0 dearborn_heights_mi:c"
"dearborn","N_e{0}","dearborn_mi:c","0 dearborn_mi:c"
"death valley","N_e{0}","death_valley:lo","0 death_valley:lo"
"decatur","N_e{0}","decatur_il:c","0 decatur_il:c"
"delaware","N_e{0}","delaware:s","0 delaware:s"
"delaware river","N_e{0}","delaware_river:r","0 delaware_river:r"
"denver","N_e{0}","denver_co:c","0 denver_co:c"
"des moines","N_e{0}","des_moines_ia:c","0 des_moines_ia:c"
"detroit","N_e{0}","detroit_mi:c","0 detroit_mi:c"
"district of columbia","N_e{0}","district_of_columbia:s","0 district_of_columbia:s"
"dover","N_e{0}","dover_de:c","0 dover_de:c"
"downey","N_e{0}","downey_ca:c","0 downey_ca:c"
"dubuque","N_e{0}","dubuque_ia:c","0 dubuque_ia:c"
"duluth","N_e{0}","duluth_mn:c","0 duluth_mn:c"
"dundalk","N_e{0}","dundalk_md:c","0 dundalk_md:c"
"durham","N_e{0}","durham_nc:c","0 durham_nc:c"
"east los angeles","N_e{0}","east_los_angeles_ca:c","0 east_los_angeles_ca:c"
"east orange","N_e{0}","east_orange_nj:c","0 east_orange_nj:c"
"edison","N_e{0}","edison_nj:c","0 edison_nj:c"
"el cajon","N_e{0}","el_cajon_ca:c","0 el_cajon_ca:c"
"el monte","N_e{0}","el_monte_ca:c","0 el_monte_ca:c"
"el paso","N_e{0}","el_paso_tx:c","0 el_paso_tx:c"
"elgin","N_e{0}","elgin_il:c","0 elgin_il:c"
"elizabeth","N_e{0}","elizabeth_nj:c","0 elizabeth_nj:c"
"elyria","N_e{0}","elyria_oh:c","0 elyria_oh:c"
"erie","N_e{0}","erie:l","0 erie:l"
"erie","N_e{0}","erie_pa:c","0 erie_pa:c"
"escondido","N_e{0}","escondido_ca:c","0 escondido_ca:c"
"euclid","N_e{0}","euclid_oh:c","0 euclid_oh:c"
"eugene","N_e{0}","eugene_or:c","0 eugene_or:c"
"evanston","N_e{0}","evanston_il:c","0 evanston_il:c"
"evansville","N_e{0}","evansville_in:c","0 evansville_in:c"
"ewa","N_e{0}","ewa_hi:c","0 ewa_hi:c"
"fairfield","N_e{0}","fairfield_ca:c","0 fairfield_ca:c"
"fall river","N_e{0}","fall_river_ma:c","0 fall_river_ma:c"
"fargo","N_e{0}","fargo_nd:c","0 fargo_nd:c"
"farmington hills","N_e{0}","farmington_hills_mi:c","0 farmington_hills_mi:c"
"fayetteville","N_e{0}","fayetteville_nc:c","0 fayetteville_nc:c"
"flathead","N_e{0}","flathead:l","0 flathead:l"
"flint","N_e{0}","flint_mi:c","0 flint_mi:c"
"florida","N_e{0}","florida:s","0 florida:s"
"fort collins","N_e{0}","fort_collins_co:c","0 fort_collins_co:c"
"fort lauderdale","N_e{0}","fort_lauderdale_fl:c","0 fort_lauderdale_fl:c"
"fort smith","N_e{0}","fort_smith_ar:c","0 fort_smith_ar:c"
"fort wayne","N_e{0}","fort_wayne_in:c","0 fort_wayne_in:c"
"fort worth","N_e{0}","fort_worth_tx:c","0 fort_worth_tx:c"
"framingham","N_e{0}","framingham_ma:c","0 framingham_ma:c"
"fremont","N_e{0}","fremont_ca:c","0 fremont_ca:c"
"fresno","N_e{0}","fresno_ca:c","0 fresno_ca:c"
"fullerton","N_e{0}","fullerton_ca:c","0 fullerton_ca:c"
"gainesville","N_e{0}","gainesville_fl:c","0 gainesville_fl:c"
"garden grove","N_e{0}","garden_grove_ca:c","0 garden_grove_ca:c"
"garland","N_e{0}","garland_tx:c","0 garland_tx:c"
"gary","N_e{0}","gary_in:c","0 gary_in:c"
"georgia","N_e{0}","georgia:s","0 georgia:s"
"gila river","N_e{0}","gila_river:r","0 gila_river:r"
"glendale","N_e{0}","glendale_az:c","0 glendale_az:c"
"glendale","N_e{0}","glendale_ca:c","0 glendale_ca:c"
"grand prairie","N_e{0}","grand_prairie_tx:c","0 grand_prairie_tx:c"
"grand rapids","N_e{0}","grand_rapids_mi:c","0 grand_rapids_mi:c"
"great falls","N_e{0}","great_falls_mt:c","0 great_falls_mt:c"
"great salt lake","N_e{0}","great_salt_lake:l","0 great_salt_lake:l"
"green bay","N_e{0}","green_bay_wi:c","0 green_bay_wi:c"
"green river","N_e{0}","green_river:r","0 green_river:r"
"greensboro","N_e{0}","greensboro_nc:c","0 greensboro_nc:c"
"greenville","N_e{0}","greenville_sc:c","0 greenville_sc:c"
"greenwich","N_e{0}","greenwich_ct:c","0 greenwich_ct:c"
"guadalupe peak","N_e{0}","guadalupe_peak:m","0 guadalupe_peak:m"
"hamilton","N_e{0}","hamilton_oh:c","0 hamilton_oh:c"
"hammond","N_e{0}","hammond_in:c","0 hammond_in:c"
"hampton","N_e{0}","hampton_va:c","0 hampton_va:c"
"hartford","N_e{0}","hartford_ct:c","0 hartford_ct:c"
"hawaii","N_e{0}","hawaii:s","0 hawaii:s"
"hayward","N_e{0}","hayward_ca:c","0 hayward_ca:c"
"high point","N_e{0}","high_point_nc:c","0 high_point_nc:c"
"hollywood","N_e{0}","hollywood_fl:c","0 hollywood_fl:c"
"honolulu","N_e{0}","honolulu_hi:c","0 honolulu_hi:c"
"houston","N_e{0}","houston_tx:c","0 houston_tx:c"
"hudson river","N_e{0}","hudson_river:r","0 hudson_river:r"
"huntington beach","N_e{0}","huntington_beach_ca:c","0 huntington_beach_ca:c"
"huntington","N_e{0}","huntington_wv:c","0 huntington_wv:c"
"huntsville","N_e{0}","huntsville_al:c","0 huntsville_al:c"
"huron","N_e{0}","huron:l","0 huron:l"
"idaho","N_e{0}","idaho:s","0 idaho:s"
"iliamna","N_e{0}","iliamna:l","0 iliamna:l"
"illinois","N_e{0}","illinois:s","0 illinois:s"
"independence","N_e{0}","independence_mo:c","0 independence_mo:c"
"indiana","N_e{0}","indiana:s","0 indiana:s"
"indianapolis","N_e{0}","indianapolis_in:c","0 indianapolis_in:c"
"inglewood","N_e{0}","inglewood_ca:c","0 inglewood_ca:c"
"iowa","N_e{0}","iowa:s","0 iowa:s"
"irondequoit","N_e{0}","irondequoit_ny:c","0 irondequoit_ny:c"
"irvine","N_e{0}","irvine_ca:c","0 irvine_ca:c"
"irving","N_e{0}","irving_tx:c","0 irving_tx:c"
"irvington","N_e{0}","irvington_nj:c","0 irvington_nj:c"
"jackson","N_e{0}","jackson_ms:c","0 jackson_ms:c"
"jacksonville","N_e{0}","jacksonville_fl:c","0 jacksonville_fl:c"
"jersey city","N_e{0}","jersey_city_nj:c","0 jersey_city_nj:c"
"joliet","N_e{0}","joliet_il:c","0 joliet_il:c"
"kalamazoo","N_e{0}","kalamazoo_mi:c","0 kalamazoo_mi:c"
"kansas","N_e{0}","kansas:s","0 kansas:s"
"kansas city","N_e{0}","kansas_city_ks:c","0 kansas_city_ks:c"
"kansas city","N_e{0}","kansas_city_mo:c","0 kansas_city_mo:c"
"kendall","N_e{0}","kendall_fl:c","0 kendall_fl:c"
"kenner","N_e{0}","kenner_la:c","0 kenner_la:c"
"kenosha","N_e{0}","kenosha_wi:c","0 kenosha_wi:c"
"kentucky","N_e{0}","kentucky:s","0 kentucky:s"
"kettering","N_e{0}","kettering_oh:c","0 kettering_oh:c"
"knoxville","N_e{0}","knoxville_tn:c","0 knoxville_tn:c"
"koolaupoko","N_e{0}","koolaupoko_hi:c","0 koolaupoko_hi:c"
"lafayette","N_e{0}","lafayette_la:c","0 lafayette_la:c"
"lake charles","N_e{0}","lake_charles_la:c","0 lake_charles_la:c"
"lake of the woods","N_e{0}","lake_of_the_woods:l","0 lake_of_the_woods:l"
"lakewood","N_e{0}","lakewood_ca:c","0 lakewood_ca:c"
"lakewood","N_e{0}","lakewood_co:c","0 lakewood_co:c"
"lakewood","N_e{0}","lakewood_oh:c","0 lakewood_oh:c"
"lansing","N_e{0}","lansing_mi:c","0 lansing_mi:c"
"laredo","N_e{0}","laredo_tx:c","0 laredo_tx:c"
"largo","N_e{0}","largo_fl:c","0 largo_fl:c"
"las vegas","N_e{0}","las_vegas_nv:c","0 las_vegas_nv:c"
"lawrence","N_e{0}","lawrence_ma:c","0 lawrence_ma:c"
"lawton","N_e{0}","lawton_ok:c","0 lawton_ok:c"
"levittown","N_e{0}","levittown_ny:c","0 levittown_ny:c"
"lexington","N_e{0}","lexington_ky:c","0 lexington_ky:c"
"lincoln","N_e{0}","lincoln_ne:c","0 lincoln_ne:c"
"little missouri river","N_e{0}","little_missouri_river:r","0 little_missouri_river:r"
"little rock","N_e{0}","little_rock_ar:c","0 little_rock_ar:c"
"livonia","N_e{0}","livonia_mi:c","0 livonia_mi:c"
"long beach","N_e{0}","long_beach_ca:c","0 long_beach_ca:c"
"longview","N_e{0}","longview_tx:c","0 longview_tx:c"
"lorain","N_e{0}","lorain_oh:c","0 lorain_oh:c"
"los angeles","N_e{0}","los_angeles_ca:c","0 los_angeles_ca:c"
"louisiana","N_e{0}","louisiana:s","0 louisiana:s"
"louisville","N_e{0}","louisville_ky:c","0 louisville_ky:c"
"lowell","N_e{0}","lowell_ma:c","0 lowell_ma:c"
"lower merion","N_e{0}","lower_merion_pa:c","0 lower_merion_pa:c"
"lubbock","N_e{0}","lubbock_tx:c","0 lubbock_tx:c"
"lynchburg","N_e{0}","lynchburg_va:c","0 lynchburg_va:c"
"lynn","N_e{0}","lynn_ma:c","0 lynn_ma:c"
"macon","N_e{0}","macon_ga:c","0 macon_ga:c"
"madison","N_e{0}","madison_wi:c","0 madison_wi:c"
"maine","N_e{0}","maine:s","0 maine:s"
"manchester","N_e{0}","manchester_nh:c","0 manchester_nh:c"
"maryland","N_e{0}","maryland:s","0 maryland:s"
"massachusetts","N_e{0}","massachusetts:s","0 massachusetts:s"
"mcallen","N_e{0}","mcallen_tx:c","0 mcallen_tx:c"
"medford","N_e{0}","medford_ma:c","0 medford_ma:c"
"memphis","N_e{0}","memphis_tn:c","0 memphis_tn:c"
"meriden","N_e{0}","meriden_ct:c","0 meriden_ct:c"
"mesa","N_e{0}","mesa_az:c","0 mesa_az:c"
"mesquite","N_e{0}","mesquite_tx:c","0 mesquite_tx:c"
"metairie","N_e{0}","metairie_la:c","0 metairie_la:c"
"miami beach","N_e{0}","miami_beach_fl:c","0 miami_beach_fl:c"
"miami","N_e{0}","miami_fl:c","0 miami_fl:c"
"michigan","N_e{0}","michigan:l","0 michigan:l"
"michigan","N_e{0}","michigan:s","0 michigan:s"
"middletown","N_e{0}","middletown_nj:c","0 middletown_nj:c"
"midland","N_e{0}","midland_tx:c","0 midland_tx:c"
"mille lacs","N_e{0}","mille_lacs:l","0 mille_lacs:l"
"milwaukee","N_e{0}","milwaukee_wi:c","0 milwaukee_wi:c"
"minneapolis","N_e{0}","minneapolis_mn:c","0 minneapolis_mn:c"
"minnesota","N_e{0}","minnesota:s","0 minnesota:s"
"mississippi","N_e{0}","mississippi:s","0 mississippi:s"
"mississippi river","N_e{0}","mississippi_river:r","0 mississippi_river:r"
"missouri","N_e{0}","missouri:s","0 missouri:s"
"missouri river","N_e{0}","missouri_river:r","0 missouri_river:r"
"mobile","N_e{0}","mobile_al:c","0 mobile_al:c"
"modesto","N_e{0}","modesto_ca:c","0 modesto_ca:c"
"monroe","N_e{0}","monroe_la:c","0 monroe_la:c"
"montana","N_e{0}","montana:s","0 montana:s"
"montgomery","N_e{0}","montgomery_al:c","0 montgomery_al:c"
"mount alverstone","N_e{0}","mount_alverstone:m","0 mount_alverstone:m"
"mount antero","N_e{0}","mount_antero:m","0 mount_antero:m"
"mount bear","N_e{0}","mount_bear:m","0 mount_bear:m"
"mount belford","N_e{0}","mount_belford:m","0 mount_belford:m"
"mount bianca","N_e{0}","mount_bianca:m","0 mount_bianca:m"
"mount blackburn","N_e{0}","mount_blackburn:m","0 mount_blackburn:m"
"mount bona","N_e{0}","mount_bona:m","0 mount_bona:m"
"mount bross","N_e{0}","mount_bross:m","0 mount_bross:m"
"mount browne tower","N_e{0}","mount_browne_tower:m","0 mount_browne_tower:m"
"mount castle","N_e{0}","mount_castle:m","0 mount_castle:m"
"mount churchill","N_e{0}","mount_churchill:m","0 mount_churchill:m"
"mount crestone","N_e{0}","mount_crestone:m","0 mount_crestone:m"
"mount crestone needle","N_e{0}","mount_crestone_needle:m","0 mount_crestone_needle:m"
"mount east buttress","N_e{0}","mount_east_buttress:m","0 mount_east_buttress:m"
"mount el diente","N_e{0}","mount_el_diente:m","0 mount_el_diente:m"
"mount elbert","N_e{0}","mount_elbert:m","0 mount_elbert:m"
"mount evans","N_e{0}","mount_evans:m","0 mount_evans:m"
"mount fairweather","N_e{0}","mount_fairweather:m","0 mount_fairweather:m"
"mount foraker","N_e{0}","mount_foraker:m","0 mount_foraker:m"
"mount grays","N_e{0}","mount_grays:m","0 mount_grays:m"
"mount harvard","N_e{0}","mount_harvard:m","0 mount_harvard:m"
"mount hubbard","N_e{0}","mount_hubbard:m","0 mount_hubbard:m"
"mount hunter","N_e{0}","mount_hunter:m","0 mount_hunter:m"
"mount kennedy","N_e{0}","mount_kennedy:m","0 mount_kennedy:m"
"mount kit carson","N_e{0}","mount_kit_carson:m","0 mount_kit_carson:m"
"mount la plata","N_e{0}","mount_la_plata:m","0 mount_la_plata:m"
"mount lincoln","N_e{0}","mount_lincoln:m","0 mount_lincoln:m"
"mount longs","N_e{0}","mount_longs:m","0 mount_longs:m"
"mount maroon","N_e{0}","mount_maroon:m","0 mount_maroon:m"
"mount massive","N_e{0}","mount_massive:m","0 mount_massive:m"
"mount mckinley","N_e{0}","mount_mckinley:m","0 mount_mckinley:m"
"mount north palisade","N_e{0}","mount_north_palisade:m","0 mount_north_palisade:m"
"mount princeton","N_e{0}","mount_princeton:m","0 mount_princeton:m"
"mount quandary","N_e{0}","mount_quandary:m","0 mount_quandary:m"
"mount rainier","N_e{0}","mount_rainier:m","0 mount_rainier:m"
"mount sanford","N_e{0}","mount_sanford:m","0 mount_sanford:m"
"mount shasta","N_e{0}","mount_shasta:m","0 mount_shasta:m"
"mount shavano","N_e{0}","mount_shavano:m","0 mount_shavano:m"
"mount sill","N_e{0}","mount_sill:m","0 mount_sill:m"
"mount south buttress","N_e{0}","mount_south_buttress:m","0 mount_south_buttress:m"
"mount st elias","N_e{0}","mount_st_elias:m","0 mount_st_elias:m"
"mount torreys","N_e{0}","mount_torreys:m","0 mount_torreys:m"
"mount uncompahgre","N_e{0}","mount_uncompahgre:m","0 mount_uncompahgre:m"
"mount vancouver","N_e{0}","mount_vancouver:m","0 mount_vancouver:m"
"mount vernon","N_e{0}","mount_vernon_ny:c","0 mount_vernon_ny:c"
"mount white","N_e{0}","mount_white:m","0 mount_white:m"
"mount whitney","N_e{0}","mount_whitney:m","0 mount_whitney:m"
"mount williamson","N_e{0}","mount_williamson:m","0 mount_williamson:m"
"mount wilson","N_e{0}","mount_wilson:m","0 mount_wilson:m"
"mount wrangell","N_e{0}","mount_wrangell:m","0 mount_wrangell:m"
"mount yale","N_e{0}","mount_yale:m","0 mount_yale:m"
"mountain view","N_e{0}","mountain_view_ca:c","0 mountain_view_ca:c"
"muncie","N_e{0}","muncie_in:c","0 muncie_in:c"
"naknek","N_e{0}","naknek:l","0 naknek:l"
"nashua","N_e{0}","nashua_nh:c","0 nashua_nh:c"
"nashville","N_e{0}","nashville_tn:c","0 nashville_tn:c"
"nebraska","N_e{0}","nebraska:s","0 nebraska:s"
"neosho river","N_e{0}","neosho_river:r","0 neosho_river:r"
"nevada","N_e{0}","nevada:s","0 nevada:s"
"new bedford","N_e{0}","new_bedford_ma:c","0 new_bedford_ma:c"
"new britain","N_e{0}","new_britain_ct:c","0 new_britain_ct:c"
"new hampshire","N_e{0}","new_hampshire:s","0 new_hampshire:s"
"new haven","N_e{0}","new_haven_ct:c","0 new_haven_ct:c"
"new jersey","N_e{0}","new_jersey:s","0 new_jersey:s"
"new mexico","N_e{0}","new_mexico:s","0 new_mexico:s"
"new orleans","N_e{0}","new_orleans_la:c","0 new_orleans_la:c"
"new rochelle","N_e{0}","new_rochelle_ny:c","0 new_rochelle_ny:c"
"new york","N_e{0}","new_york:s","0 new_york:s"
"new york","N_e{0}","new_york_city:c","0 new_york_city:c"
"new york","N_e{0}","new_york_ny:c","0 new_york_ny:c"
"newark","N_e{0}","newark_nj:c","0 newark_nj:c"
"newport beach","N_e{0}","newport_beach_ca:c","0 newport_beach_ca:c"
"newport news","N_e{0}","newport_news_va:c","0 newport_news_va:c"
"newton","N_e{0}","newton_ma:c","0 newton_ma:c"
"niagara falls","N_e{0}","niagara_falls_ny:c","0 niagara_falls_ny:c"
"niobrara river","N_e{0}","niobrara_river:r","0 niobrara_river:r"
"norfolk","N_e{0}","norfolk_va:c","0 norfolk_va:c"
"norman","N_e{0}","norman_ok:c","0 norman_ok:c"
"north carolina","N_e{0}","north_carolina:s","0 north_carolina:s"
"north charleston","N_e{0}","north_charleston_sc:c","0 north_charleston_sc:c"
"north dakota","N_e{0}","north_dakota:s","0 north_dakota:s"
"north little rock","N_e{0}","north_little_rock_ar:c","0 north_little_rock_ar:c"
"north platte river","N_e{0}","north_platte_river:r","0 north_platte_river:r"
"norwalk","N_e{0}","norwalk_ca:c","0 norwalk_ca:c"
"norwalk","N_e{0}","norwalk_ct:c","0 norwalk_ct:c"
"oak lawn","N_e{0}","oak_lawn_il:c","0 oak_lawn_il:c"
"oakland","N_e{0}","oakland_ca:c","0 oakland_ca:c"
"oceanside","N_e{0}","oceanside_ca:c","0 oceanside_ca:c"
"odessa","N_e{0}","odessa_tx:c","0 odessa_tx:c"
"ogden","N_e{0}","ogden_ut:c","0 ogden_ut:c"
"ohio","N_e{0}","ohio:s","0 ohio:s"
"ohio river","N_e{0}","ohio_river:r","0 ohio_river:r"
"okeechobee","N_e{0}","okeechobee:l","0 okeechobee:l"
"oklahoma","N_e{0}","oklahoma:s","0 oklahoma:s"
"oklahoma city","N_e{0}","oklahoma_city_ok:c","0 oklahoma_city_ok:c"
"omaha","N_e{0}","omaha_ne:c","0 omaha_ne:c"
"ontario","N_e{0}","ontario:l","0 ontario:l"
"ontario","N_e{0}","ontario_ca:c","0 ontario_ca:c"
"orange","N_e{0}","orange_ca:c","0 orange_ca:c"
"oregon","N_e{0}","oregon:s","0 oregon:s"
"orlando","N_e{0}","orlando_fl:c","0 orlando_fl:c"
"ouachita river","N_e{0}","ouachita_river:r","0 ouachita_river:r"
"overland park","N_e{0}","overland_park_ks:c","0 overland_park_ks:c"
"oxnard","N_e{0}","oxnard_ca:c","0 oxnard_ca:c"
"parma","N_e{0}","parma_oh:c","0 parma_oh:c"
"pasadena","N_e{0}","pasadena_ca:c","0 pasadena_ca:c"
"pasadena","N_e{0}","pasadena_tx:c","0 pasadena_tx:c"
"paterson","N_e{0}","paterson_nj:c","0 paterson_nj:c"
"pawtucket","N_e{0}","pawtucket_ri:c","0 pawtucket_ri:c"
"pearl river","N_e{0}","pearl_river:r","0 pearl_river:r"
"pecos river","N_e{0}","pecos_river:r","0 pecos_river:r"
"penn hills","N_e{0}","penn_hills_pa:c","0 penn_hills_pa:c"
"pennsylvania","N_e{0}","pennsylvania:s","0 pennsylvania:s"
"pensacola","N_e{0}","pensacola_fl:c","0 pensacola_fl:c"
"peoria","N_e{0}","peoria_il:c","0 peoria_il:c"
"philadelphia","N_e{0}","philadelphia_pa:c","0 philadelphia_pa:c"
"phoenix","N_e{0}","phoenix_az:c","0 phoenix_az:c"
"pittsburgh","N_e{0}","pittsburgh_pa:c","0 pittsburgh_pa:c"
"plano","N_e{0}","plano_tx:c","0 plano_tx:c"
"pomona","N_e{0}","pomona_ca:c","0 pomona_ca:c"
"pontchartrain","N_e{0}","pontchartrain:l","0 pontchartrain:l"
"pontiac","N_e{0}","pontiac_mi:c","0 pontiac_mi:c"
"port arthur","N_e{0}","port_arthur_tx:c","0 port_arthur_tx:c"
"portland","N_e{0}","portland_me:c","0 portland_me:c"
"portland","N_e{0}","portland_or:c","0 portland_or:c"
"portsmouth","N_e{0}","portsmouth_va:c","0 portsmouth_va:c"
"potomac river","N_e{0}","potomac_river:r","0 potomac_river:r"
"powder river","N_e{0}","powder_river:r","0 powder_river:r"
"providence","N_e{0}","providence_ri:c","0 providence_ri:c"
"provo","N_e{0}","provo_ut:c","0 provo_ut:c"
"pueblo","N_e{0}","pueblo_co:c","0 pueblo_co:c"
"quincy","N_e{0}","quincy_ma:c","0 quincy_ma:c"
"racine","N_e{0}","racine_wi:c","0 racine_wi:c"
"rainy","N_e{0}","rainy:l","0 rainy:l"
"raleigh","N_e{0}","raleigh_nc:c","0 raleigh_nc:c"
"reading","N_e{0}","reading_pa:c","0 reading_pa:c"
"red","N_e{0}","red:l","0 red:l"
"red river","N_e{0}","red_river:r","0 red_river:r"
"redford","N_e{0}","redford_mi:c","0 redford_mi:c"
"redondo beach","N_e{0}","redondo_beach_ca:c","0 redondo_beach_ca:c"
"reno","N_e{0}","reno_nv:c","0 reno_nv:c"
"republican river","N_e{0}","republican_river:r","0 republican_river:r"
"rhode island","N_e{0}","rhode_island:s","0 rhode_island:s"
"richardson","N_e{0}","richardson_tx:c","0 richardson_tx:c"
"richmond","N_e{0}","richmond_ca:c","0 richmond_ca:c"
"richmond","N_e{0}","richmond_va:c","0 richmond_va:c"
"rio grande river","N_e{0}","rio_grande_river:r","0 rio_grande_river:r"
"riverside","N_e{0}","riverside_ca:c","0 riverside_ca:c"
"roanoke river","N_e{0}","roanoke_river:r","0 roanoke_river:r"
"roanoke","N_e{0}","roanoke_va:c","0 roanoke_va:c"
"rochester","N_e{0}","rochester_ny:c","0 rochester_ny:c"
"rock river","N_e{0}","rock_river:r","0 rock_river:r"
"rockford","N_e{0}","rockford_il:c","0 rockford_il:c"
"royal oak","N_e{0}","royal_oak_mi:c","0 royal_oak_mi:c"
"sacramento","N_e{0}","sacramento_ca:c","0 sacramento_ca:c"
"saginaw","N_e{0}","saginaw_mi:c","0 saginaw_mi:c"
"salem","N_e{0}","salem_or:c","0 salem_or:c"
"salinas","N_e{0}","salinas_ca:c","0 salinas_ca:c"
"salt lake city","N_e{0}","salt_lake_city_ut:c","0 salt_lake_city_ut:c"
"salton sea","N_e{0}","salton_sea:l","0 salton_sea:l"
"san angelo","N_e{0}","san_angelo_tx:c","0 san_angelo_tx:c"
"san antonio","N_e{0}","san_antonio_tx:c","0 san_antonio_tx:c"
"san bernardino","N_e{0}","san_bernardino_ca:c","0 san_bernardino_ca:c"
"san diego","N_e{0}","san_diego_ca:c","0 san_diego_ca:c"
"san francisco","N_e{0}","san_francisco_ca:c","0 san_francisco_ca:c"
"san franciso","N_e{0}","san_franciso_ca:c","0 san_franciso_ca:c"
"san jose","N_e{0}","san_jose_ca:c","0 san_jose_ca:c"
"san juan river","N_e{0}","san_juan_river:r","0 san_juan_river:r"
"san leandro","N_e{0}","san_leandro_ca:c","0 san_leandro_ca:c"
"san mateo","N_e{0}","san_mateo_ca:c","0 san_mateo_ca:c"
"santa ana","N_e{0}","santa_ana_ca:c","0 santa_ana_ca:c"
"santa barbara","N_e{0}","santa_barbara_ca:c","0 santa_barbara_ca:c"
"santa clara","N_e{0}","santa_clara_ca:c","0 santa_clara_ca:c"
"santa monica","N_e{0}","santa_monica_ca:c","0 santa_monica_ca:c"
"santa rosa","N_e{0}","santa_rosa_ca:c","0 santa_rosa_ca:c"
"savannah","N_e{0}","savannah_ga:c","0 savannah_ga:c"
"schenectady","N_e{0}","schenectady_ny:c","0 schenectady_ny:c"
"scotts valley","N_e{0}","scotts_valley_ca:c","0 scotts_valley_ca:c"
"scottsdale","N_e{0}","scottsdale_az:c","0 scottsdale_az:c"
"scranton","N_e{0}","scranton_pa:c","0 scranton_pa:c"
"seattle","N_e{0}","seattle_wa:c","0 seattle_wa:c"
"shreveport","N_e{0}","shreveport_la:c","0 shreveport_la:c"
"silver spring","N_e{0}","silver_spring_md:c","0 silver_spring_md:c"
"simi valley","N_e{0}","simi_valley_ca:c","0 simi_valley_ca:c"
"sioux city","N_e{0}","sioux_city_ia:c","0 sioux_city_ia:c"
"sioux falls","N_e{0}","sioux_falls_sd:c","0 sioux_falls_sd:c"
"skokie","N_e{0}","skokie_il:c","0 skokie_il:c"
"smoky hill river","N_e{0}","smoky_hill_river:r","0 smoky_hill_river:r"
"snake river","N_e{0}","snake_river:r","0 snake_river:r"
"somerville","N_e{0}","somerville_ma:c","0 somerville_ma:c"
"south bend","N_e{0}","south_bend_in:c","0 south_bend_in:c"
"south carolina","N_e{0}","south_carolina:s","0 south_carolina:s"
"south dakota","N_e{0}","south_dakota:s","0 south_dakota:s"
"south gate","N_e{0}","south_gate_ca:c","0 south_gate_ca:c"
"south platte river","N_e{0}","south_platte_river:r","0 south_platte_river:r"
"southfield","N_e{0}","southfield_mi:c","0 southfield_mi:c"
"spokane","N_e{0}","spokane_wa:c","0 spokane_wa:c"
"springfield","N_e{0}","springfield_il:c","0 springfield_il:c"
"springfield","N_e{0}","springfield_ma:c","0 springfield_ma:c"
"springfield","N_e{0}","springfield_mo:c","0 springfield_mo:c"
"springfield","N_e{0}","springfield_oh:c","0 springfield_oh:c"
"springfield","N_e{0}","springfield_sd:c","0 springfield_sd:c"
"st clair","N_e{0}","st_clair:l","0 st_clair:l"
"st clair shores","N_e{0}","st_clair_shores_mi:c","0 st_clair_shores_mi:c"
"st francis river","N_e{0}","st_francis_river:r","0 st_francis_river:r"
"st joseph","N_e{0}","st_joseph_mo:c","0 st_joseph_mo:c"
"st louis","N_e{0}","st_louis_mo:c","0 st_louis_mo:c"
"st paul","N_e{0}","st_paul_mn:c","0 st_paul_mn:c"
"st petersburg","N_e{0}","st_petersburg_fl:c","0 st_petersburg_fl:c"
"stamford","N_e{0}","stamford_ct:c","0 stamford_ct:c"
"sterling heights","N_e{0}","sterling_heights_mi:c","0 sterling_heights_mi:c"
"stockton","N_e{0}","stockton_ca:c","0 stockton_ca:c"
"sunnyvale","N_e{0}","sunnyvale_ca:c","0 sunnyvale_ca:c"
"superior","N_e{0}","superior:l","0 superior:l"
"syracuse","N_e{0}","syracuse_ny:c","0 syracuse_ny:c"
"tacoma","N_e{0}","tacoma_wa:c","0 tacoma_wa:c"
"tahoe","N_e{0}","tahoe:l","0 tahoe:l"
"tallahassee","N_e{0}","tallahassee_fl:c","0 tallahassee_fl:c"
"tampa","N_e{0}","tampa_fl:c","0 tampa_fl:c"
"taylor","N_e{0}","taylor_mi:c","0 taylor_mi:c"
"tempe","N_e{0}","tempe_az:c","0 tempe_az:c"
"tennessee","N_e{0}","tennessee:s","0 tennessee:s"
"tennessee river","N_e{0}","tennessee_river:r","0 tennessee_river:r"
"terre haute","N_e{0}","terre_haute_in:c","0 terre_haute_in:c"
"teshekpuk","N_e{0}","teshekpuk:l","0 teshekpuk:l"
"texas","N_e{0}","texas:s","0 texas:s"
"thousand oaks","N_e{0}","thousand_oaks_ca:c","0 thousand_oaks_ca:c"
"toledo","N_e{0}","toledo_oh:c","0 toledo_oh:c"
"tombigbee river","N_e{0}","tombigbee_river:r","0 tombigbee_river:r"
"topeka","N_e{0}","topeka_ks:c","0 topeka_ks:c"
"torrance","N_e{0}","torrance_ca:c","0 torrance_ca:c"
"trenton","N_e{0}","trenton_nj:c","0 trenton_nj:c"
"troy","N_e{0}","troy_mi:c","0 troy_mi:c"
"tucson","N_e{0}","tucson_az:c","0 tucson_az:c"
"tulsa","N_e{0}","tulsa_ok:c","0 tulsa_ok:c"
"tuscaloosa","N_e{0}","tuscaloosa_al:c","0 tuscaloosa_al:c"
"tyler","N_e{0}","tyler_tx:c","0 tyler_tx:c"
"upper darby","N_e{0}","upper_darby_pa:c","0 upper_darby_pa:c"
"usa","N_e{0}","usa:co","0 usa:co"
"utah","N_e{0}","utah:s","0 utah:s"
"utica","N_e{0}","utica_ny:c","0 utica_ny:c"
"vallejo","N_e{0}","vallejo_ca:c","0 vallejo_ca:c"
"ventura","N_e{0}","ventura_ca:c","0 ventura_ca:c"
"vermont","N_e{0}","vermont:s","0 vermont:s"
"virginia","N_e{0}","virginia:s","0 virginia:s"
"virginia beach","N_e{0}","virginia_beach_va:c","0 virginia_beach_va:c"
"wabash river","N_e{0}","wabash_river:r","0 wabash_river:r"
"waco","N_e{0}","waco_tx:c","0 waco_tx:c"
"waltham","N_e{0}","waltham_ma:c","0 waltham_ma:c"
"warren","N_e{0}","warren_mi:c","0 warren_mi:c"
"warwick","N_e{0}","warwick_ri:c","0 warwick_ri:c"
"washington","N_e{0}","washington:s","0 washington:s"
"washington","N_e{0}","washington_dc:c","0 washington_dc:c"
"washita river","N_e{0}","washita_river:r","0 washita_river:r"
"waterbury","N_e{0}","waterbury_ct:c","0 waterbury_ct:c"
"wateree catawba river","N_e{0}","wateree_catawba_river:r","0 wateree_catawba_river:r"
"waterford","N_e{0}","waterford_mi:c","0 waterford_mi:c"
"waterloo","N_e{0}","waterloo_ia:c","0 waterloo_ia:c"
"waukegan","N_e{0}","waukegan_il:c","0 waukegan_il:c"
"west allis","N_e{0}","west_allis_wi:c","0 west_allis_wi:c"
"west covina","N_e{0}","west_covina_ca:c","0 west_covina_ca:c"
"west hartford","N_e{0}","west_hartford_ct:c","0 west_hartford_ct:c"
"west palm beach","N_e{0}","west_palm_beach_fl:c","0 west_palm_beach_fl:c"
"west valley","N_e{0}","west_valley_ut:c","0 west_valley_ut:c"
"west virginia","N_e{0}","west_virginia:s","0 west_virginia:s"
"westland","N_e{0}","westland_mi:c","0 westland_mi:c"
"westminster","N_e{0}","westminster_ca:c","0 westminster_ca:c"
"white river","N_e{0}","white_river:r","0 white_river:r"
"whittier","N_e{0}","whittier_ca:c","0 whittier_ca:c"
"wichita falls","N_e{0}","wichita_falls_tx:c","0 wichita_falls_tx:c"
"wichita","N_e{0}","wichita_ks:c","0 wichita_ks:c"
"wilmington","N_e{0}","wilmington_de:c","0 wilmington_de:c"
"winnebago","N_e{0}","winnebago:l","0 winnebago:l"
"winston-salem","N_e{0}","winston-salem_nc:c","0 winston-salem_nc:c"
"wisconsin","N_e{0}","wisconsin:s","0 wisconsin:s"
"woodbridge","N_e{0}","woodbridge_nj:c","0 woodbridge_nj:c"
"worcester","N_e{0}","worcester_ma:c","0 worcester_ma:c"
"wyoming","N_e{0}","wyoming:s","0 wyoming:s"
"wyoming","N_e{0}","wyoming_mi:c","0 wyoming_mi:c"
"yellowstone river","N_e{0}","yellowstone_river:r","0 yellowstone_river:r"
"yonkers","N_e{0}","yonkers_ny:c","0 yonkers_ny:c"
"youngstown","N_e{0}","youngstown_oh:c","0 youngstown_oh:c"
"a","((N:<e,t>{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) ($1 $3) (loc:<lo,<lo,t>> $3 $2)))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1","exists:<<e,t>,t> 2 2"
"a","((N:<e,t>{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) ($1 $3) (loc:<lo,<lo,t>> $3 $2)))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"a","((N:<e,t>{0}/N:n{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (named:<e,<n,t>> $2 $1)))))","0 named:<e,<n,t>>","named:<e,<n,t>> 1 1","named:<e,<n,t>> 2 2"
"a","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"a","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"about","(N:i{0}/N:e{1}){0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>","population:<lo,i> 1 1"
"adjacent","((N:<e,t>{0}/N:e{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $2 $1)))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1","next_to:<lo,<lo,t>> 2 2"
"adjoin","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (next_to:<lo,<lo,t>> $1 $0)))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"alabama","N:e{0}","alabama:s","0 alabama:s"
"alaska","N:e{0}","alaska:s","0 alaska:s"
"albany","N:e{0}","albany_ny:c","0 albany_ny:c"
"all","((N:<e,t>{0}/N:e{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"america","N:e{0}","usa:co","0 usa:co"
"and","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) ($1 $2) (state:<s,t> $2)))))","0 state:<s,t>","state:<s,t> 1 1","state:<s,t> 2 2"
"and","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> (not:<t,t> ($0 $2)) (not:<t,t> ($1 $2))))))","0 not:<t,t>","not:<t,t> 1 1","not:<t,t> 2 2"
"are","((N:<e,t>{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($1 $3) (loc:<lo,<lo,t>> $2 $3))))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1","exists:<<e,t>,t> 2 2"
"are","((N:<e,t>{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($1 $3) (loc:<lo,<lo,t>> $2 $3))))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"are","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($1 $3) (loc:<lo,<lo,t>> $2 $3))))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1","exists:<<e,t>,t> 2 2"
"are","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($1 $3) (loc:<lo,<lo,t>> $2 $3))))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"are","((N:<e,t>{0}/N:e{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"area","(N:i{0}/N:e{1}){0}","(lambda $0 (area:<lo,i> $0))","0 area:<lo,i>","area:<lo,i> 1 1"
"area","N:<e,i>{0}","(lambda $0 (area:<lo,i> $0))","0 area:<lo,i>"
"arizona","N:e{0}","arizona:s","0 arizona:s"
"arkansas","N:e{0}","arkansas:s","0 arkansas:s"
"at","N:i{0}","0:i","0 0:i"
"atlanta","N:e{0}","atlanta_ga:c","0 atlanta_ga:c"
"austin","N:e{0}","austin_tx:c","0 austin_tx:c"
"austin","N:n{0}","austin:n","0 austin:n"
"average","(N:i{0}/N:e{1}){0}","(lambda $0 (density:<lo,i> $0))","0 density:<lo,i>","density:<lo,i> 1 1"
"baton","N:e{0}","baton_rouge_la:c","0 baton_rouge_la:c"
"big","(N:i{0}/N:e{1}){0}","(lambda $0 (size:<lo,i> $0))","0 size:<lo,i>","size:<lo,i> 1 1"
"big","N:<e,t>{0}","(lambda $0 (major:<lo,t> $0))","0 major:<lo,t>"
"biggest","((N:e{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))) (lambda $2 (size:<lo,i> $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"biggest","((N:e{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))) (lambda $2 (size:<lo,i> $2)))))","0 size:<lo,i>","size:<lo,i> 1 1","size:<lo,i> 2 2"
"biggest","N:<e,i>{0}","(lambda $0 (size:<lo,i> $0))","0 size:<lo,i>"
"border","((N:<e,t>{0}/N:<e,i>{1}){0}/N:<<e,i>,e>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (next_to:<lo,<lo,t>> $2 ($0 $1)))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1","next_to:<lo,<lo,t>> 2 2"
"border","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $2 $1)))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1","next_to:<lo,<lo,t>> 2 2"
"border","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"border","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"border","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (next_to:<lo,<lo,t>> $1 $0)))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"border","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"border","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"border","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (next_to:<lo,<lo,t>> $0 $1)))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"bordering","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $2 $1)))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1","next_to:<lo,<lo,t>> 2 2"
"bordering","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"bordering","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"borders","((N:<e,t>{0}\N:<e,t>{1}){0}/N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (next_to:<lo,<lo,t>> $2 $0)))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1","next_to:<lo,<lo,t>> 2 2"
"borders","(N:<e,i>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 count:<<e,t>,i>","count:<<e,t>,i> 1 1"
"borders","(N:<e,i>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"borders","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (next_to:<lo,<lo,t>> (the:<<e,t>,e> (lambda $2 ($0 $2))) $1)))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"borders","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (next_to:<lo,<lo,t>> (the:<<e,t>,e> (lambda $2 ($0 $2))) $1)))","0 the:<<e,t>,e>","the:<<e,t>,e> 1 1"
"borders","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (next_to:<lo,<lo,t>> $1 $0) (state:<s,t> $1))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"borders","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (next_to:<lo,<lo,t>> $1 $0) (state:<s,t> $1))))","0 state:<s,t>","state:<s,t> 1 1"
"borders","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (next_to:<lo,<lo,t>> $0 $1)))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"boston","N:e{0}","boston_ma:c","0 boston_ma:c"
"boulder","N:e{0}","boulder_co:c","0 boulder_co:c"
"by","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"by","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"california","N:e{0}","california:s","0 california:s"
"called","(N:<e,t>{0}/N:n{1}){0}","(lambda $0 (lambda $1 (named:<e,<n,t>> $1 $0)))","0 named:<e,<n,t>>","named:<e,<n,t>> 1 1"
"capital","((N:<e,t>{0}/N:<e,t>{1}){0}\N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (capital2:<s,<c,t>> $2 $0)))))","0 capital2:<s,<c,t>>","capital2:<s,<c,t>> 1 1","capital2:<s,<c,t>> 2 2"
"capital","((N:<e,t>{0}\N:<e,t>{1}){0}/N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (capital2:<s,<c,t>> $2 $0)))))","0 capital2:<s,<c,t>>","capital2:<s,<c,t>> 1 1","capital2:<s,<c,t>> 2 2"
"capital","((N:<e,t>{0}\N:<e,t>{1}){0}\N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (capital2:<s,<c,t>> $2 $0)))))","0 capital2:<s,<c,t>>","capital2:<s,<c,t>> 1 1","capital2:<s,<c,t>> 2 2"
"capital","((N:e{0}/N:<e,i>{1}){0}/N:<<e,i>,e>{2}){0}","(lambda $0 (lambda $1 (capital:<s,c> ($0 $1))))","0 capital:<s,c>","capital:<s,c> 1 1","capital:<s,c> 2 2"
"capital","((N:e{0}/N:<e,t>{1}){0}/N:<<e,t>,e>{2}){0}","(lambda $0 (lambda $1 (capital:<s,c> ($0 $1))))","0 capital:<s,c>","capital:<s,c> 1 1","capital:<s,c> 2 2"
"capital","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (capital2:<s,<c,t>> $1 $0)))","0 capital2:<s,<c,t>>","capital2:<s,<c,t>> 1 1"
"capital","(N:e{0}/N:e{1}){0}","(lambda $0 (capital:<s,c> $0))","0 capital:<s,c>","capital:<s,c> 1 1"
"capital","N:<e,t>{0}","(lambda $0 (capital:<c,t> $0))","0 capital:<c,t>"
"capitals","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (capital:<c,t> $1))))","0 capital:<c,t>","capital:<c,t> 1 1"
"carolina","N:e{0}","south_carolina:s","0 south_carolina:s"
"chicago","N:e{0}","chicago_il:c","0 chicago_il:c"
"cities","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (city:<c,t> $1))))","0 city:<c,t>","city:<c,t> 1 1"
"cities","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (city:<c,t> $1))))","0 city:<c,t>","city:<c,t> 1 1"
"cities","N:<e,t>{0}","(lambda $0 (city:<c,t> $0))","0 city:<c,t>"
"citizens","(N:i{0}/N:e{1}){0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>","population:<lo,i> 1 1"
"citizens","N:<e,i>{0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>"
"city","((N:<e,t>{0}\N:<e,t>{1}){0}/N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (loc:<lo,<lo,t>> $0 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"city","((N:e{0}/N:<e,t>{1}){0}\N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($1 $2) (city:<c,t> $2))) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"city","((N:e{0}/N:<e,t>{1}){0}\N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($1 $2) (city:<c,t> $2))) (lambda $2 ($0 $2)))))","0 city:<c,t>","city:<c,t> 1 1","city:<c,t> 2 2"
"city","(N:<<e,t>,e>{0}/N:<e,i>{1}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"city","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (city:<c,t> $1) (loc:<lo,<lo,t>> $1 $0))))","0 city:<c,t>","city:<c,t> 1 1"
"city","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (city:<c,t> $1) (loc:<lo,<lo,t>> $1 $0))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"city","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (city:<c,t> $1) (loc:<lo,<lo,t>> $1 $0))))","0 city:<c,t>","city:<c,t> 1 1"
"city","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (city:<c,t> $1) (loc:<lo,<lo,t>> $1 $0))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"city","N:<e,t>{0}","(lambda $0 (city:<c,t> $0))","0 city:<c,t>"
"colorado","N:<e,i>{0}","(lambda $0 (elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (place:<p,t> $1))) (lambda $1 (elevation:<lo,i> $1)))))","0 argmax:<<e,t>,<<e,i>,e>>"
"colorado","N:<e,i>{0}","(lambda $0 (elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (place:<p,t> $1))) (lambda $1 (elevation:<lo,i> $1)))))","0 elevation:<lo,i>"
"colorado","N:<e,i>{0}","(lambda $0 (elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (place:<p,t> $1))) (lambda $1 (elevation:<lo,i> $1)))))","0 loc:<lo,<lo,t>>"
"colorado","N:<e,i>{0}","(lambda $0 (elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (place:<p,t> $1))) (lambda $1 (elevation:<lo,i> $1)))))","0 place:<p,t>"
"colorado","N:e{0}","colorado:s","0 colorado:s"
"colorado","N:e{0}","colorado_river:r","0 colorado_river:r"
"colorado","N:n{0}","colorado:n","0 colorado:n"
"columbus","N:e{0}","columbus_oh:c","0 columbus_oh:c"
"combined","((N:i{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (sum:<<e,t>,<<e,i>,i>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 sum:<<e,t>,<<e,i>,i>>","sum:<<e,t>,<<e,i>,i>> 1 1","sum:<<e,t>,<<e,i>,i>> 2 2"
"combined","((N:i{0}\N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (sum:<<e,t>,<<e,i>,i>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 sum:<<e,t>,<<e,i>,i>>","sum:<<e,t>,<<e,i>,i>> 1 1","sum:<<e,t>,<<e,i>,i>> 2 2"
"contains","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"contains","((N:e{0}/N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"could","N:<e,i>{0}","(lambda $0 (elevation:<lo,i> $0))","0 elevation:<lo,i>"
"country","N:e{0}","usa:co","0 usa:co"
"cross","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"cross","((N:<e,t>{0}\N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $3 ($0 $3)) (lambda $3 ($1 $3))) $2))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"cross","((N:<e,t>{0}\N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $3 ($0 $3)) (lambda $3 ($1 $3))) $2))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"dakota","N:e{0}","south_dakota:s","0 south_dakota:s"
"dallas","N:e{0}","dallas_tx:c","0 dallas_tx:c"
"dc","N:e{0}","washington_dc:c","0 washington_dc:c"
"death","N:e{0}","death_valley:lo","0 death_valley:lo"
"delaware","N:e{0}","delaware:s","0 delaware:s"
"density","(N:i{0}/N:e{1}){0}","(lambda $0 (density:<lo,i> $0))","0 density:<lo,i>","density:<lo,i> 1 1"
"density","N:<e,i>{0}","(lambda $0 (density:<lo,i> $0))","0 density:<lo,i>"
"denver","N:e{0}","denver_co:c","0 denver_co:c"
"des","N:e{0}","des_moines_ia:c","0 des_moines_ia:c"
"diego","N:e{0}","san_diego_ca:c","0 san_diego_ca:c"
"do","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (not:<t,t> ($1 $2))))))","0 not:<t,t>","not:<t,t> 1 1","not:<t,t> 2 2"
"do","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $0 $1)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"does","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"does","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $0 $1)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"dover","N:e{0}","dover_de:c","0 dover_de:c"
"each","((N:<e,e>{0}\N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (argmin:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> ($0 $3) (loc:<lo,<lo,t>> $3 $2))) (lambda $3 ($1 $3))))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"each","((N:<e,e>{0}\N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (argmin:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> ($0 $3) (loc:<lo,<lo,t>> $3 $2))) (lambda $3 ($1 $3))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"elevation","((N:e{0}\N:<e,i>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) (place:<p,t> $2))) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"elevation","((N:e{0}\N:<e,i>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) (place:<p,t> $2))) (lambda $2 ($1 $2)))))","0 place:<p,t>","place:<p,t> 1 1","place:<p,t> 2 2"
"elevation","((N:i{0}/N:<e,t>{1}){0}/N:<<e,t>,e>{2}){0}","(lambda $0 (lambda $1 (elevation:<lo,i> ($0 $1))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1","elevation:<lo,i> 2 2"
"elevation","(N:e{0}\N:<e,i>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (place:<p,t> $1)) (lambda $1 ($0 $1))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"elevation","(N:e{0}\N:<e,i>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (place:<p,t> $1)) (lambda $1 ($0 $1))))","0 place:<p,t>","place:<p,t> 1 1"
"elevation","(N:i{0}/N:e{1}){0}","(lambda $0 (elevation:<lo,i> $0))","0 elevation:<lo,i>","elevation:<lo,i> 1 1"
"elevation","N:<e,t>{0}","(lambda $0 (place:<p,t> $0))","0 place:<p,t>"
"excluding","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (equals:<e,<e,t>> $1 $0)))","0 equals:<e,<e,t>>","equals:<e,<e,t>> 1 1"
"exist","((N:e{0}\N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"flint","N:e{0}","flint_mi:c","0 flint_mi:c"
"florida","N:e{0}","florida:s","0 florida:s"
"flow","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"flow","((N:<e,t>{0}\N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) (loc:<lo,<lo,t>> $2 $3))))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1","exists:<<e,t>,t> 2 2"
"flow","((N:<e,t>{0}\N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) (loc:<lo,<lo,t>> $2 $3))))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"flowing","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"flows","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"for","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (next_to:<lo,<lo,t>> $1 $0)))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"fort","N:e{0}","fort_wayne_in:c","0 fort_wayne_in:c"
"found","((N:i{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))))))","0 count:<<e,t>,i>","count:<<e,t>,i> 1 1","count:<<e,t>,i> 2 2"
"francisco","N:e{0}","san_francisco_ca:c","0 san_francisco_ca:c"
"ga","(N:i{0}\N:e{1}){0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>","population:<lo,i> 1 1"
"georgia","N:e{0}","georgia:s","0 georgia:s"
"give","N:<e,i>{0}","(lambda $0 (size:<lo,i> $0))","0 size:<lo,i>"
"go","N:e{0}","ohio_river:r","0 ohio_river:r"
"grande","N:e{0}","rio_grande_river:r","0 rio_grande_river:r"
"greatest","((N:e{0}/N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"guadalupe","N:e{0}","guadalupe_peak:m","0 guadalupe_peak:m"
"hampshire","N:e{0}","new_hampshire:s","0 new_hampshire:s"
"has","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"have","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (exists:<<e,t>,t> (lambda $3 ($1 $3)))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1","exists:<<e,t>,t> 2 2"
"have","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"have","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"have","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $1 $0)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"hawaii","N:e{0}","hawaii:s","0 hawaii:s"
"height","((N:i{0}/N:<e,t>{1}){0}/N:<<e,t>,e>{2}){0}","(lambda $0 (lambda $1 (elevation:<lo,i> ($0 $1))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1","elevation:<lo,i> 2 2"
"height","(N:i{0}/N:e{1}){0}","(lambda $0 (elevation:<lo,i> $0))","0 elevation:<lo,i>","elevation:<lo,i> 1 1"
"high","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (next_to:<lo,<lo,t>> $1 $0)))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"high","(N:i{0}/N:e{1}){0}","(lambda $0 (elevation:<lo,i> $0))","0 elevation:<lo,i>","elevation:<lo,i> 1 1"
"higher","(N:<e,t>{0}/N:i{1}){0}","(lambda $0 (lambda $1 (>:<i,<i,t>> (elevation:<lo,i> $1) $0)))","0 >:<i,<i,t>>",">:<i,<i,t>> 1 1"
"higher","(N:<e,t>{0}/N:i{1}){0}","(lambda $0 (lambda $1 (>:<i,<i,t>> (elevation:<lo,i> $1) $0)))","0 elevation:<lo,i>","elevation:<lo,i> 1 1"
"higher","(N:e{0}\N:<e,t>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (and:<t*,t> ($0 $1) (loc:<lo,<lo,t>> $1 colorado:s))) (lambda $1 (elevation:<lo,i> $1))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"higher","(N:e{0}\N:<e,t>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (and:<t*,t> ($0 $1) (loc:<lo,<lo,t>> $1 colorado:s))) (lambda $1 (elevation:<lo,i> $1))))","0 colorado:s","colorado:s 1 1"
"higher","(N:e{0}\N:<e,t>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (and:<t*,t> ($0 $1) (loc:<lo,<lo,t>> $1 colorado:s))) (lambda $1 (elevation:<lo,i> $1))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1"
"higher","(N:e{0}\N:<e,t>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (and:<t*,t> ($0 $1) (loc:<lo,<lo,t>> $1 colorado:s))) (lambda $1 (elevation:<lo,i> $1))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"highest","((N:e{0}/N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"highest","((N:e{0}\N:<e,i>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"highest","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 ($0 $1)) (lambda $1 (elevation:<lo,i> $1))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"highest","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 ($0 $1)) (lambda $1 (elevation:<lo,i> $1))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1"
"highest","N:<e,i>{0}","(lambda $0 (elevation:<lo,i> $0))","0 elevation:<lo,i>"
"houston","N:e{0}","houston_tx:c","0 houston_tx:c"
"how","(N:i{0}/N:<e,t>{1}){0}","(lambda $0 (count:<<e,t>,i> (lambda $1 ($0 $1))))","0 count:<<e,t>,i>","count:<<e,t>,i> 1 1"
"idaho","N:e{0}","idaho:s","0 idaho:s"
"illinois","N:e{0}","illinois:s","0 illinois:s"
"in","((N:<e,t>{0}/N:<e,t>{1}){0}/N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (loc:<lo,<lo,t>> $2 $0)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"in","((N:<e,t>{0}\N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) (loc:<lo,<lo,t>> $2 $3))))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1","exists:<<e,t>,t> 2 2"
"in","((N:<e,t>{0}\N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) (loc:<lo,<lo,t>> $2 $3))))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"in","((N:<e,t>{0}\N:<e,t>{1}){0}/N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (loc:<lo,<lo,t>> $2 $0)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"in","((N:<e,t>{0}\N:<e,t>{1}){0}\N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (loc:<lo,<lo,t>> $0 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"in","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $1 $0)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"indiana","N:e{0}","indiana:s","0 indiana:s"
"indianapolis","N:e{0}","indianapolis_in:c","0 indianapolis_in:c"
"inhabitants","(N:i{0}/N:e{1}){0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>","population:<lo,i> 1 1"
"iowa","N:e{0}","iowa:s","0 iowa:s"
"is","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (equals:<e,<e,t>> $2 $1)))))","0 equals:<e,<e,t>>","equals:<e,<e,t>> 1 1","equals:<e,<e,t>> 2 2"
"is","((N:e{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"is","((N:e{0}\N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"is","N:<e,i>{0}","(lambda $0 (size:<lo,i> $0))","0 size:<lo,i>"
"jose","N:e{0}","san_jose_ca:c","0 san_jose_ca:c"
"kalamazoo","N:e{0}","kalamazoo_mi:c","0 kalamazoo_mi:c"
"kansas","N:e{0}","kansas:s","0 kansas:s"
"kentucky","N:e{0}","kentucky:s","0 kentucky:s"
"kilometers","(N:i{0}/N:e{1}){0}","(lambda $0 (size:<lo,i> $0))","0 size:<lo,i>","size:<lo,i> 1 1"
"lakes","N:<e,t>{0}","(lambda $0 (lake:<l,t> $0))","0 lake:<l,t>"
"large","((N:i{0}/N:<e,t>{1}){0}/N:<<e,t>,e>{2}){0}","(lambda $0 (lambda $1 (size:<lo,i> ($0 $1))))","0 size:<lo,i>","size:<lo,i> 1 1","size:<lo,i> 2 2"
"largest","((N:<e,t>{0}/N:<e,i>{1}){0}\N:<<e,i>,e>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (loc:<lo,<lo,t>> $2 ($0 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"largest","((N:e{0}/N:<e,i>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"largest","((N:e{0}/N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"largest","((N:e{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($1 $2) (state:<s,t> $2))) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"largest","((N:e{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($1 $2) (state:<s,t> $2))) (lambda $2 ($0 $2)))))","0 state:<s,t>","state:<s,t> 1 1","state:<s,t> 2 2"
"largest","((N:e{0}\N:<e,i>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"largest","((N:e{0}\N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))) (lambda $2 (size:<lo,i> $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"largest","((N:e{0}\N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))) (lambda $2 (size:<lo,i> $2)))))","0 size:<lo,i>","size:<lo,i> 1 1","size:<lo,i> 2 2"
"largest","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 ($0 $1)) (lambda $1 (size:<lo,i> $1))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"largest","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 ($0 $1)) (lambda $1 (size:<lo,i> $1))))","0 size:<lo,i>","size:<lo,i> 1 1"
"largest","N:<e,i>{0}","(lambda $0 (size:<lo,i> $0))","0 size:<lo,i>"
"least","((N:e{0}/N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"least","((N:e{0}\N:<e,i>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"length","((N:i{0}/N:<e,i>{1}){0}/N:<<e,i>,e>{2}){0}","(lambda $0 (lambda $1 (len:<r,i> ($0 $1))))","0 len:<r,i>","len:<r,i> 1 1","len:<r,i> 2 2"
"length","((N:i{0}/N:<e,t>{1}){0}/N:<<e,t>,e>{2}){0}","(lambda $0 (lambda $1 (len:<r,i> ($0 $1))))","0 len:<r,i>","len:<r,i> 1 1","len:<r,i> 2 2"
"length","(N:i{0}/N:e{1}){0}","(lambda $0 (len:<r,i> $0))","0 len:<r,i>","len:<r,i> 1 1"
"level","(N:<e,t>{0}\N:<e,e>{1}){0}","(lambda $0 (lambda $1 (equals:<e,<e,t>> $1 ($0 $1))))","0 equals:<e,<e,t>>","equals:<e,<e,t>> 1 1"
"lie","((N:<e,t>{0}/N:<e,t>{1}){0}/N:<<e,t>,e>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (loc:<lo,<lo,t>> ($0 $1) $2))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"long","(N:i{0}/N:e{1}){0}","(lambda $0 (len:<r,i> $0))","0 len:<r,i>","len:<r,i> 1 1"
"longer","((N:<e,t>{0}\N:<e,t>{1}){0}/N:i{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (>:<i,<i,t>> (len:<r,i> $2) $0)))))","0 >:<i,<i,t>>",">:<i,<i,t>> 1 1",">:<i,<i,t>> 2 2"
"longer","((N:<e,t>{0}\N:<e,t>{1}){0}/N:i{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (>:<i,<i,t>> (len:<r,i> $2) $0)))))","0 len:<r,i>","len:<r,i> 1 1","len:<r,i> 2 2"
"longest","N:<e,i>{0}","(lambda $0 (len:<r,i> $0))","0 len:<r,i>"
"louisiana","N:e{0}","louisiana:s","0 louisiana:s"
"lowest","((N:e{0}/N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"lowest","((N:e{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))) (lambda $2 (elevation:<lo,i> $2)))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"lowest","((N:e{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))) (lambda $2 (elevation:<lo,i> $2)))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1","elevation:<lo,i> 2 2"
"lowest","((N:e{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))) (lambda $2 (elevation:<lo,i> $2)))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"lowest","((N:e{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))) (lambda $2 (elevation:<lo,i> $2)))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1","elevation:<lo,i> 2 2"
"lowest","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 (elevation:<lo,i> $2))) $1)))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1"
"lowest","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 (elevation:<lo,i> $2))) $1)))","0 elevation:<lo,i>","elevation:<lo,i> 1 1"
"lowest","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 (elevation:<lo,i> $2))) $1)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"lowest","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2) (state:<s,t> $2))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"lowest","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2) (state:<s,t> $2))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"lowest","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2) (state:<s,t> $2))))))","0 state:<s,t>","state:<s,t> 1 1"
"lowest","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1 ($0 $1)) (lambda $1 (elevation:<lo,i> $1))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1"
"lowest","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1 ($0 $1)) (lambda $1 (elevation:<lo,i> $1))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1"
"maine","(N:i{0}\N:e{1}){0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>","population:<lo,i> 1 1"
"maine","N:e{0}","maine:s","0 maine:s"
"major","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (major:<lo,t> $1))))","0 major:<lo,t>","major:<lo,t> 1 1"
"major","N:<e,t>{0}","(lambda $0 (major:<lo,t> $0))","0 major:<lo,t>"
"maryland","N:e{0}","maryland:s","0 maryland:s"
"massachusetts","(N:i{0}\N:e{1}){0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>","population:<lo,i> 1 1"
"massachusetts","N:e{0}","massachusetts:s","0 massachusetts:s"
"mckinley","N:e{0}","mount_mckinley:m","0 mount_mckinley:m"
"mexico","N:e{0}","new_mexico:s","0 new_mexico:s"
"michigan","N:e{0}","michigan:s","0 michigan:s"
"minnesota","N:e{0}","minnesota:s","0 minnesota:s"
"mississippi","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"mississippi","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"mississippi","N:e{0}","mississippi:s","0 mississippi:s"
"mississippi","N:e{0}","mississippi_river:r","0 mississippi_river:r"
"missouri","N:e{0}","missouri:s","0 missouri:s"
"missouri","N:e{0}","missouri_river:r","0 missouri_river:r"
"moines","((N:<e,t>{0}\N:<e,t>{1}){0}\N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (loc:<lo,<lo,t>> $0 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"moines","(N:e{0}\N:<e,t>{1}){0}","(lambda $0 (the:<<e,t>,e> (lambda $1 ($0 $1))))","0 the:<<e,t>,e>","the:<<e,t>,e> 1 1"
"montana","N:e{0}","montana:s","0 montana:s"
"montgomery","N:e{0}","montgomery_al:c","0 montgomery_al:c"
"most","((N:e{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"most","((N:e{0}/N:<e,t>{1}){0}\N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"most","((N:e{0}\N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"most","(N:<e,i>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2))))))","0 count:<<e,t>,i>","count:<<e,t>,i> 1 1"
"most","(N:<e,i>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"most","(N:<e,i>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1))))))","0 count:<<e,t>,i>","count:<<e,t>,i> 1 1"
"most","(N:<e,i>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"mount","((N:<e,t>{0}\N:<e,t>{1}){0}/N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (loc:<lo,<lo,t>> $0 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"mountain","N:<e,t>{0}","(lambda $0 (mountain:<m,t> $0))","0 mountain:<m,t>"
"mountains","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (mountain:<m,t> $1))))","0 mountain:<m,t>","mountain:<m,t> 1 1"
"name","(N:<n,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (named:<e,<n,t>> $0 $1)))","0 named:<e,<n,t>>","named:<e,<n,t>> 1 1"
"named","((N:<e,t>{0}/N:<e,t>{1}){0}/N:n{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (named:<e,<n,t>> $2 $0)))))","0 named:<e,<n,t>>","named:<e,<n,t>> 1 1","named:<e,<n,t>> 2 2"
"named","((N:<e,t>{0}\N:<e,t>{1}){0}/N:n{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (named:<e,<n,t>> $2 $0)))))","0 named:<e,<n,t>>","named:<e,<n,t>> 1 1","named:<e,<n,t>> 2 2"
"named","(N:<e,t>{0}/N:n{1}){0}","(lambda $0 (lambda $1 (named:<e,<n,t>> $1 $0)))","0 named:<e,<n,t>>","named:<e,<n,t>> 1 1"
"names","(N:<n,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (named:<e,<n,t>> $2 $1))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"names","(N:<n,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (named:<e,<n,t>> $2 $1))))))","0 named:<e,<n,t>>","named:<e,<n,t>> 1 1"
"nebraska","N:e{0}","nebraska:s","0 nebraska:s"
"neighbor","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $2 $1)))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1","next_to:<lo,<lo,t>> 2 2"
"neighboring","((N:i{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))))))","0 count:<<e,t>,i>","count:<<e,t>,i> 1 1","count:<<e,t>,i> 2 2"
"nevada","N:e{0}","nevada:s","0 nevada:s"
"no","((N:<e,t>{0}\N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (not:<t,t> ($0 $2))))))","0 not:<t,t>","not:<t,t> 1 1","not:<t,t> 2 2"
"no","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (not:<t,t> ($0 $1))))","0 not:<t,t>","not:<t,t> 1 1"
"no","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (not:<t,t> ($0 $1))))","0 not:<t,t>","not:<t,t> 1 1"
"north","N:e{0}","north_carolina:s","0 north_carolina:s"
"north","N:e{0}","north_dakota:s","0 north_dakota:s"
"not","((N:<e,t>{0}/N:<e,t>{1}){0}/N:<<e,t>,e>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (loc:<lo,<lo,t>> $2 ($0 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"not","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (not:<t,t> ($0 $1))))","0 not:<t,t>","not:<t,t> 1 1"
"of","(N:<<e,t>,e>{0}/N:<e,i>{1}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"of","N:<<e,t>,e>{0}","(lambda $0 (the:<<e,t>,e> (lambda $1 ($0 $1))))","0 the:<<e,t>,e>"
"ohio","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $0 $1)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"ohio","N:e{0}","ohio:s","0 ohio:s"
"oklahoma","N:e{0}","oklahoma:s","0 oklahoma:s"
"on","(N:<<e,t>,e>{0}/N:<e,i>{1}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"on","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (the:<<e,t>,e> (lambda $1 ($0 $1))))","0 the:<<e,t>,e>","the:<<e,t>,e> 1 1"
"one","((N:<e,t>{0}\N:i{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (>:<i,<i,t>> ($0 $2) $1))))","0 >:<i,<i,t>>",">:<i,<i,t>> 1 1",">:<i,<i,t>> 2 2"
"one","((N:e{0}\N:<e,t>{1}){0}\N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"or","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (or:<t*,t> ($1 $2) ($0 $2)))))","0 or:<t*,t>","or:<t*,t> 1 1","or:<t*,t> 2 2"
"oregon","N:e{0}","oregon:s","0 oregon:s"
"orleans","N:e{0}","new_orleans_la:c","0 new_orleans_la:c"
"other","(N:<e,i>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 count:<<e,t>,i>","count:<<e,t>,i> 1 1"
"other","(N:<e,i>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"over","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"pass","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $0 $1)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"passes","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"passes","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"passes","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $1 $0)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"peak","N:<e,t>{0}","(lambda $0 (mountain:<m,t> $0))","0 mountain:<m,t>"
"pennsylvania","N:e{0}","pennsylvania:s","0 pennsylvania:s"
"people","(N:i{0}/N:e{1}){0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>","population:<lo,i> 1 1"
"people","N:<e,i>{0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>"
"pittsburgh","N:e{0}","pittsburgh_pa:c","0 pittsburgh_pa:c"
"point","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (place:<p,t> $1))))","0 place:<p,t>","place:<p,t> 1 1"
"point","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (place:<p,t> $1))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"point","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (place:<p,t> $1))))","0 place:<p,t>","place:<p,t> 1 1"
"point","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (equals:<e,<e,t>> $2 (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $1) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3)))) (loc:<lo,<lo,t>> $2 $1))))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"point","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (equals:<e,<e,t>> $2 (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $1) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3)))) (loc:<lo,<lo,t>> $2 $1))))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1"
"point","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (equals:<e,<e,t>> $2 (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $1) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3)))) (loc:<lo,<lo,t>> $2 $1))))))","0 equals:<e,<e,t>>","equals:<e,<e,t>> 1 1"
"point","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (equals:<e,<e,t>> $2 (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $1) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3)))) (loc:<lo,<lo,t>> $2 $1))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"point","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (equals:<e,<e,t>> $2 (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $1) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3)))) (loc:<lo,<lo,t>> $2 $1))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"point","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (equals:<e,<e,t>> $2 (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $1) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3)))) (loc:<lo,<lo,t>> $2 $1))))))","0 place:<p,t>","place:<p,t> 1 1"
"point","N:<e,t>{0}","(lambda $0 (place:<p,t> $0))","0 place:<p,t>"
"points","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (place:<p,t> $1))))","0 place:<p,t>","place:<p,t> 1 1"
"points","(N:<i,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (elevation:<lo,<i,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $2) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3))) $1))))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"points","(N:<i,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (elevation:<lo,<i,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $2) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3))) $1))))))","0 elevation:<lo,<i,t>>","elevation:<lo,<i,t>> 1 1"
"points","(N:<i,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (elevation:<lo,<i,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $2) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3))) $1))))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1"
"points","(N:<i,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (elevation:<lo,<i,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $2) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3))) $1))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"points","(N:<i,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (elevation:<lo,<i,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $2) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3))) $1))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"points","(N:<i,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (elevation:<lo,<i,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> (loc:<lo,<lo,t>> $3 $2) (place:<p,t> $3))) (lambda $3 (elevation:<lo,i> $3))) $1))))))","0 place:<p,t>","place:<p,t> 1 1"
"points","N:e{0}","mississippi:s","0 mississippi:s"
"populated","N:<e,i>{0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>"
"population","((N:i{0}/N:<e,t>{1}){0}/N:<<e,t>,e>{2}){0}","(lambda $0 (lambda $1 (population:<lo,i> ($0 $1))))","0 population:<lo,i>","population:<lo,i> 1 1","population:<lo,i> 2 2"
"population","(N:i{0}/N:e{1}){0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>","population:<lo,i> 1 1"
"population","N:<e,i>{0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>"
"populations","(N:<i,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (population:<lo,<i,t>> $2 $1))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"populations","(N:<i,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (population:<lo,<i,t>> $2 $1))))))","0 population:<lo,<i,t>>","population:<lo,<i,t>> 1 1"
"populations","N:<e,i>{0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>"
"populous","N:<e,i>{0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>"
"portland","N:e{0}","portland_me:c","0 portland_me:c"
"potomac","N:e{0}","potomac_river:r","0 potomac_river:r"
"red","N:e{0}","red_river:r","0 red_river:r"
"rhode","N:e{0}","rhode_island:s","0 rhode_island:s"
"river","((N:e{0}/N:<e,t>{1}){0}\N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($1 $2) (river:<r,t> $2))) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"river","((N:e{0}/N:<e,t>{1}){0}\N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($1 $2) (river:<r,t> $2))) (lambda $2 ($0 $2)))))","0 river:<r,t>","river:<r,t> 1 1","river:<r,t> 2 2"
"river","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $0 $1) (state:<s,t> $1))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"river","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $0 $1) (state:<s,t> $1))))","0 state:<s,t>","state:<s,t> 1 1"
"river","N:<e,t>{0}","(lambda $0 (river:<r,t> $0))","0 river:<r,t>"
"rivers","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (river:<r,t> $1))))","0 river:<r,t>","river:<r,t> 1 1"
"rivers","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (river:<r,t> $1))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"rivers","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (river:<r,t> $1))))","0 river:<r,t>","river:<r,t> 1 1"
"rivers","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (river:<r,t> $1))))","0 river:<r,t>","river:<r,t> 1 1"
"rivers","N:<e,t>{0}","(lambda $0 (exists:<<e,t>,t> (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (river:<r,t> $1)))))","0 exists:<<e,t>,t>"
"rivers","N:<e,t>{0}","(lambda $0 (exists:<<e,t>,t> (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (river:<r,t> $1)))))","0 loc:<lo,<lo,t>>"
"rivers","N:<e,t>{0}","(lambda $0 (exists:<<e,t>,t> (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $1 $0) (river:<r,t> $1)))))","0 river:<r,t>"
"rivers","N:<e,t>{0}","(lambda $0 (river:<r,t> $0))","0 river:<r,t>"
"riverside","N:e{0}","riverside_ca:c","0 riverside_ca:c"
"rochester","N:e{0}","rochester_ny:c","0 rochester_ny:c"
"rochester","N:n{0}","rochester:n","0 rochester:n"
"run","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($1 $3) (loc:<lo,<lo,t>> $2 $3))))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1","exists:<<e,t>,t> 2 2"
"run","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($1 $3) (loc:<lo,<lo,t>> $2 $3))))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"run","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"run","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $1 $0)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"run","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $0 $1)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"running","(N:<e,i>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1))))))","0 count:<<e,t>,i>","count:<<e,t>,i> 1 1"
"running","(N:<e,i>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (count:<<e,t>,i> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"running","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"running","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"runs","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $2 $1)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"runs","((N:<e,t>{0}\N:<e,t>{1}){0}\N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (loc:<lo,<lo,t>> $0 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"runs","((N:e{0}/N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"runs","((N:e{0}\N:<e,i>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) (river:<r,t> $2))) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"runs","((N:e{0}\N:<e,i>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) (river:<r,t> $2))) (lambda $2 ($1 $2)))))","0 river:<r,t>","river:<r,t> 1 1","river:<r,t> 2 2"
"runs","((N:e{0}\N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"runs","(N:<<e,i>,e>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"runs","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> (the:<<e,t>,e> (lambda $2 ($0 $2))) $1)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"runs","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> (the:<<e,t>,e> (lambda $2 ($0 $2))) $1)))","0 the:<<e,t>,e>","the:<<e,t>,e> 1 1"
"runs","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $0 $1)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"sacramento","N:e{0}","sacramento_ca:c","0 sacramento_ca:c"
"salem","N:e{0}","salem_or:c","0 salem_or:c"
"scotts","N:e{0}","scotts_valley_ca:c","0 scotts_valley_ca:c"
"sea","((N:<e,e>{0}\N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> ($0 $3) ($1 $2))) (lambda $3 (elevation:<lo,i> $3))))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"sea","((N:<e,e>{0}\N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (argmax:<<e,t>,<<e,i>,e>> (lambda $3 (and:<t*,t> ($0 $3) ($1 $2))) (lambda $3 (elevation:<lo,i> $3))))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1","elevation:<lo,i> 2 2"
"seattle","N:e{0}","seattle_wa:c","0 seattle_wa:c"
"shortest","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1 ($0 $1)) (lambda $1 (len:<r,i> $1))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1"
"shortest","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1 ($0 $1)) (lambda $1 (len:<r,i> $1))))","0 len:<r,i>","len:<r,i> 1 1"
"size","(N:i{0}/N:e{1}){0}","(lambda $0 (size:<lo,i> $0))","0 size:<lo,i>","size:<lo,i> 1 1"
"smallest","((N:e{0}/N:<e,i>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"smallest","((N:e{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"smallest","((N:e{0}/N:<e,t>{1}){0}\N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"smallest","((N:e{0}\N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"smallest","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1 ($0 $1)) (lambda $1 (size:<lo,i> $1))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1"
"smallest","(N:e{0}/N:<e,t>{1}){0}","(lambda $0 (argmin:<<e,t>,<<e,i>,e>> (lambda $1 ($0 $1)) (lambda $1 (size:<lo,i> $1))))","0 size:<lo,i>","size:<lo,i> 1 1"
"sparsest","((N:e{0}/N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmin:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmin:<<e,t>,<<e,i>,e>>","argmin:<<e,t>,<<e,i>,e>> 1 1","argmin:<<e,t>,<<e,i>,e>> 2 2"
"spokane","N:e{0}","spokane_wa:c","0 spokane_wa:c"
"spot","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (place:<p,t> $1))))","0 place:<p,t>","place:<p,t> 1 1"
"springfield","N:e{0}","springfield_il:c","0 springfield_il:c"
"springfield","N:e{0}","springfield_mo:c","0 springfield_mo:c"
"springfield","N:e{0}","springfield_sd:c","0 springfield_sd:c"
"springfield","N:n{0}","springfield:n","0 springfield:n"
"state","((N:<e,t>{0}/N:i{1}){0}\N:<e,e>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (=:<i,<i,t>> (elevation:<lo,i> ($0 $2)) $1))))","0 =:<i,<i,t>>","=:<i,<i,t>> 1 1","=:<i,<i,t>> 2 2"
"state","((N:<e,t>{0}/N:i{1}){0}\N:<e,e>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (=:<i,<i,t>> (elevation:<lo,i> ($0 $2)) $1))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1","elevation:<lo,i> 2 2"
"state","(N:e{0}/N:<e,i>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (state:<s,t> $1)) (lambda $1 ($0 $1))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"state","(N:e{0}/N:<e,i>{1}){0}","(lambda $0 (argmax:<<e,t>,<<e,i>,e>> (lambda $1 (state:<s,t> $1)) (lambda $1 ($0 $1))))","0 state:<s,t>","state:<s,t> 1 1"
"state","N:<e,t>{0}","(lambda $0 (state:<s,t> $0))","0 state:<s,t>"
"states","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (state:<s,t> $1))))","0 state:<s,t>","state:<s,t> 1 1"
"states","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (state:<s,t> $1))))","0 state:<s,t>","state:<s,t> 1 1"
"states","N:<e,t>{0}","(lambda $0 (state:<s,t> $0))","0 state:<s,t>"
"states","N:e{0}","usa:co","0 usa:co"
"surrounding","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"surrounding","(N:<e,t>{0}/N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (next_to:<lo,<lo,t>> $1 $2))))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"surrounding","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (high_point:<e,<e,t>> $2 $1))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1"
"surrounding","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (exists:<<e,t>,t> (lambda $2 (and:<t*,t> ($0 $2) (high_point:<e,<e,t>> $2 $1))))))","0 high_point:<e,<e,t>>","high_point:<e,<e,t>> 1 1"
"surrounding","N:<e,t>{0}","(lambda $0 (next_to:<lo,<lo,t>> $0 mississippi:s))","0 mississippi:s"
"surrounding","N:<e,t>{0}","(lambda $0 (next_to:<lo,<lo,t>> $0 mississippi:s))","0 next_to:<lo,<lo,t>>"
"tallest","((N:e{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))) (lambda $2 (elevation:<lo,i> $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"tallest","((N:e{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))) (lambda $2 (elevation:<lo,i> $2)))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1","elevation:<lo,i> 2 2"
"tennessee","N:e{0}","tennessee:s","0 tennessee:s"
"texas","N:e{0}","texas:s","0 texas:s"
"than","((N:<e,t>{0}/N:<e,i>{1}){0}\N:i{2}){0}","(lambda $0 (lambda $1 (lambda $2 (>:<i,<i,t>> ($1 $2) $0))))","0 >:<i,<i,t>>",">:<i,<i,t>> 1 1",">:<i,<i,t>> 2 2"
"than","((N:i{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2))))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"than","((N:i{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (elevation:<lo,i> (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2))))))","0 elevation:<lo,i>","elevation:<lo,i> 1 1","elevation:<lo,i> 2 2"
"than","(N:i{0}/N:e{1}){0}","(lambda $0 (len:<r,i> $0))","0 len:<r,i>","len:<r,i> 1 1"
"that","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) ($1 $3) (loc:<lo,<lo,t>> $2 $3)))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1","exists:<<e,t>,t> 2 2"
"that","((N:<e,t>{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) ($1 $3) (loc:<lo,<lo,t>> $2 $3)))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"that","((N:<e,t>{0}\N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) ($1 $3) (loc:<lo,<lo,t>> $2 $3)))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1","exists:<<e,t>,t> 2 2"
"that","((N:<e,t>{0}\N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) ($1 $3) (loc:<lo,<lo,t>> $2 $3)))))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"that","((N:e{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (the:<<e,t>,e> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))))))","0 the:<<e,t>,e>","the:<<e,t>,e> 1 1","the:<<e,t>,e> 2 2"
"the","((N:<e,t>{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $3 ($1 $3)) (lambda $3 ($0 $3))) $2))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"the","((N:<e,t>{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (loc:<lo,<lo,t>> (argmax:<<e,t>,<<e,i>,e>> (lambda $3 ($1 $3)) (lambda $3 ($0 $3))) $2))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"the","((N:e{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"the","(N:<<e,t>,e>{0}/N:<e,i>{1}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"to","((N:<e,t>{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) ($1 $3) (next_to:<lo,<lo,t>> $2 $3)))))))","0 exists:<<e,t>,t>","exists:<<e,t>,t> 1 1","exists:<<e,t>,t> 2 2"
"to","((N:<e,t>{0}/N:<e,t>{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (exists:<<e,t>,t> (lambda $3 (and:<t*,t> ($0 $3) ($1 $3) (next_to:<lo,<lo,t>> $2 $3)))))))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1","next_to:<lo,<lo,t>> 2 2"
"to","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (next_to:<lo,<lo,t>> $1 $0)))","0 next_to:<lo,<lo,t>>","next_to:<lo,<lo,t>> 1 1"
"total","((N:i{0}/N:<e,t>{1}){0}/N:<e,i>{2}){0}","(lambda $0 (lambda $1 (sum:<<e,t>,<<e,i>,i>> (lambda $2 ($1 $2)) (lambda $2 ($0 $2)))))","0 sum:<<e,t>,<<e,i>,i>>","sum:<<e,t>,<<e,i>,i>> 1 1","sum:<<e,t>,<<e,i>,i>> 2 2"
"towns","N:<e,t>{0}","(lambda $0 (town:<lo,t> $0))","0 town:<lo,t>"
"traverse","N:<<e,t>,e>{0}","(lambda $0 (the:<<e,t>,e> (lambda $1 ($0 $1))))","0 the:<<e,t>,e>"
"traversed","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"traverses","((N:e{0}/N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"traverses","(N:<<e,i>,e>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"traverses","(N:<e,t>{0}\N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $0 $1)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"united","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (loc:<lo,<lo,t>> $1 usa:co))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"united","(N:<e,t>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> ($0 $1) (loc:<lo,<lo,t>> $1 usa:co))))","0 usa:co","usa:co 1 1"
"united","N:e{0}","usa:co","0 usa:co"
"urban","N:<e,i>{0}","(lambda $0 (population:<lo,i> $0))","0 population:<lo,i>"
"us","N:<e,t>{0}","(lambda $0 (loc:<lo,<lo,t>> $0 usa:co))","0 loc:<lo,<lo,t>>"
"us","N:<e,t>{0}","(lambda $0 (loc:<lo,<lo,t>> $0 usa:co))","0 usa:co"
"us","N:e{0}","usa:co","0 usa:co"
"usa","N:e{0}","usa:co","0 usa:co"
"utah","N:e{0}","utah:s","0 utah:s"
"vermont","N:e{0}","vermont:s","0 vermont:s"
"virginia","((N:<e,t>{0}\N:<e,t>{1}){0}\N:e{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($1 $2) (loc:<lo,<lo,t>> $2 $0)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"virginia","N:e{0}","virginia:s","0 virginia:s"
"washed","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $0 $1) (loc:<lo,<lo,t>> mississippi_river:r $1))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"washed","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (and:<t*,t> (loc:<lo,<lo,t>> $0 $1) (loc:<lo,<lo,t>> mississippi_river:r $1))))","0 mississippi_river:r","mississippi_river:r 1 1"
"washington","N:e{0}","washington:s","0 washington:s"
"west","N:e{0}","west_virginia:s","0 west_virginia:s"
"whats","N:<e,i>{0}","(lambda $0 (size:<lo,i> $0))","0 size:<lo,i>"
"where","(N:<e,t>{0}/N:e{1}){0}","(lambda $0 (lambda $1 (loc:<lo,<lo,t>> $0 $1)))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1"
"which","((N:<e,t>{0}/N:e{1}){0}/N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"which","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"whitney","N:e{0}","mount_whitney:m","0 mount_whitney:m"
"whose","N:i{0}","0:i","0 0:i"
"wisconsin","N:e{0}","wisconsin:s","0 wisconsin:s"
"with","((N:<e,t>{0}/N:e{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (lambda $2 (and:<t*,t> ($0 $2) (loc:<lo,<lo,t>> $1 $2)))))","0 loc:<lo,<lo,t>>","loc:<lo,<lo,t>> 1 1","loc:<lo,<lo,t>> 2 2"
"with","((N:e{0}/N:<e,i>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1","argmax:<<e,t>,<<e,i>,e>> 2 2"
"with","((N:e{0}/N:<e,t>{1}){0}\N:<e,t>{2}){0}","(lambda $0 (lambda $1 (the:<<e,t>,e> (lambda $2 (and:<t*,t> ($0 $2) ($1 $2))))))","0 the:<<e,t>,e>","the:<<e,t>,e> 1 1","the:<<e,t>,e> 2 2"
"with","(N:<<e,i>,e>{0}\N:<e,t>{1}){0}","(lambda $0 (lambda $1 (argmax:<<e,t>,<<e,i>,e>> (lambda $2 ($0 $2)) (lambda $2 ($1 $2)))))","0 argmax:<<e,t>,<<e,i>,e>>","argmax:<<e,t>,<<e,i>,e>> 1 1"
"wyoming","N:e{0}","wyoming:s","0 wyoming:s"
"york","N:e{0}","new_york:s","0 new_york:s"
"york","N:e{0}","new_york_ny:c","0 new_york_ny:c"
